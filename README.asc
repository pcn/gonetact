== Make your mutt contacts go away

A tool to talk to google to allow you to use your google contacts from
within mutt.  You don't store your password on disk, you store oauth2
info, so you're not exposing your password your google identity to your
friends, family, or co-workers.  Or your sysadmin.

== Why I'm doing this.

I'm proudly helping to keep you mired in the pre-web 1.0 days, by
enhancing your antiquated neckbeard email client with the most ho-hum of
cloud contact technology.

== OAuth2 based

Register yourself with google to use their oauth2 api
from your very own private console (which could be your laptop)

== How it works

The interface to it will be command-line based, similar to
abook, goobook, etc.

The workflow will be:

----
* execute
** if there is an auth token that exists on disk already
   in ~/.gonetact/client.json, use it.
*** Connect to google's auth API and do the oauth2 dance to get contacts API access [done]
**** display a URL to go to which will then ask you to auth to google.
**** get the oauth token and enter it into the provided prompt
**** save it to ~/.gonetact/cache.json
*** Provide commands to:
**** Get all contacts [done, default behavior]
**** add a contact (deletes will be up to the web UI for now)
----

== Enable oauth access in your account

Log into your google account, and point it to https://console.developers.google.com/project

image:images/google_developers_console.png[
"The google developers console, empty, no projects",width=450,
link="images/google_developers_console.png"]

== TODO:

* Write up a better intro to how to get your google API to allow you to do alias updates
* Write a section on how to configure mutt
* Look at other similar clients to see if they have a convention in the contacts where they
  store lookup info for aliases.
* The code is ugly. Learn better practices

== Done:
* Put the client config and the cache into ~/.gonetacts instead of $PWD
* Added tests
* filter contacts with a simple substring match
* pop up a browser by default (thanks @rce)
